@import './var.scss';

.sj-input-container {
  flex-grow: 1;
  display: flex;
  align-items: center;
  border-radius: var(--sj-border-radius);
  color: var(--sj-primary-text-color);

  /* size */
  @each $key,
  $value in $sj-input-size {
    &-size-#{$key} {
      height: map-get($value, "height");
      font-size: map-get($value, "fontSize");

      /* round */
      &-round {
        border-radius: map-get($value, "height");
      }

      .sj-icon {
        font-size: inherit;
      }
    }
  }

  .sj-input {
    font-size: inherit;
    font-family: inherit;
    align-self: stretch;
    flex-grow: 1;
    display: flex;
    align-items: center;
    box-sizing: border-box;
    border-style: solid;
    padding: 0 12px;
    border-color: var(--sj-border-color);
    border-radius: inherit;
    background-color: var(--sj-theme-background-color);

    input {
      flex-grow: 1;
      border-width: 0;
      border-radius: inherit;
      box-sizing: inherit;
      font-size: inherit;
      font-family: inherit;
      background-color: transparent;

      /* ie */
      &::-ms-reveal {
        display: none;
      }

      &::-ms-clear {
        display: none
      }

      &:focus {
        outline-width: 0;
      }
    }

    &:hover {
      border-color: var(--sj-primary-color);
      .sj-input-clear {
        display: block;
      }
    }

    &:focus-within {
      border-color: var(--sj-primary-color);
      outline: 3px solid var(--sj-primary-focus-background-color);

      input {
        caret-color: var(--sj-primary-color);
      }

      .sj-input-clear {
        display: block;
      }
    }

    &:hover,
    &:focus-within {
      z-index: 1;
    }

    /* border */
    &-border-block {
      border-width: 1px;
    }

    &-border-none {
      border-width: 0;

      &:focus-within {
        outline-width: 0;
      }
    }

    &-border-line {
      border-width: 0 0 1px 0;

      &:focus-within {
        outline-width: 0;
      }
    }

    /* clearable */
    &-clear {
      display: none;
      cursor: pointer;
      margin-left: 4px;
      color: var(--sj-disable-color);

      &:hover {
        color: var(--sj-secondary-text-color);
      }
    }

    /* search */
    &-search-icon {
      cursor: pointer;
      margin-left: 4px;
    }

    /* password */
    &-password {
      cursor: pointer;
      margin-left: 4px;
    }

    /* prefix */
    &-prefix {
      margin-right: 4px;
    }

    /* suffix */
    &-suffix {
      margin-left: 4px;
    }

    /* status */
    @each $key,
    $value in $sj-input-status {
      &-status-#{$key} {
        border-color: map-get($value, "border-color");

        &:hover {
          border-color: map-get($value, "border-color");
        }

        &:focus-within {
          border-color: map-get($value, "border-color");
          outline-color: map-get($value, "outline-color-foucs");

          input {
            caret-color: map-get($value, "border-color");
          }
        }
      }
    }

    /* length */
    &-length {
      margin-left: 4px;
      color: var(--sj-secondary-text-color);
    }
  }

  &-search-button {
    .sj-input {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .sj-input-search-button {
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;

      & > * {
        border-radius: inherit;
      }

      .sj-button:not(.sj-button-type-normal) {
        z-index: 2;
      }
    }
  }

  /* disabled */
  &-disabled {
    position: relative;

    * {
      color: var(--sj-disable-color);
      border-color: var(--sj-border-color);
      background-color: transparent;
    }

    .sj-input-disabled-mask {
      border-radius: inherit;
      cursor: not-allowed;
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
      background-color: var(--sj-background-color);
    }
  }
}
