@import './var.scss';

.sj-input-number-container {
  display: flex;
  align-items: center;
  border-radius: var(--sj-border-radius);

  .sj-input-number {
    flex-grow: 1;
    display: flex;
    align-items: center;
    box-sizing: border-box;
    border-style: solid;
    padding-left: 12px;
    border-color: var(--sj-border-color);
    border-radius: inherit;
    background-color: var(--sj-primary-background-color);

    input {
      align-self: stretch;
      flex-grow: 1;
      border-width: 0;
      border-radius: inherit;
      box-sizing: inherit;
      font-size: inherit;
      font-family: inherit;
      background-color: transparent;

      &:focus {
        outline-width: 0;
      }
    }

    &:hover {
      border-color: var(--sj-primary-color);
    }

    &:focus-within {
      border-color: var(--sj-primary-color);
      outline: 3px solid var(--sj-primary-focus-background-color);

      input {
        caret-color: var(--sj-primary-color);
      }
    }

    /* invalid value */
    &-invalid-value {
      input {
        text-decoration: line-through;
      }
    }

    /* no controls */
    &-no-controls {
      padding-right: 12px;
    }

    /* size */
    @each $key,
    $value in $input-number-size {
      &-size-#{$key} {
        height: map-get($value, "height");
        font-size: map-get($value, "fontSize");

        .sj-icon {
          font-size: map-get($value, "fontSize");
        }
      }

      /* round */
      &-round {
        border-radius: map-get($value, "height");
      }
    }

    /* clearable */
    &-clear {
      cursor: pointer;
      margin-left: 4px;
      color: var(--sj-disable-color);

      &:hover {
        color: var(--sj-secondary-text-color);
      }
    }

    &:hover {
      .sj-input-number-controls {
        width: 22px;
        opacity: 1;
      }
    }

    /* controls btn */
    &-controls {
      cursor: pointer;
      box-sizing: border-box;
      display: inline-block;
      opacity: 0;
      width: 8px;
      height: 100%;
      margin-left: 4px;
      border-left: 1px solid var(--sj-border-color);
      transition: all 0.2s ease-in-out;

      &-add,
      &-minus {
        box-sizing: inherit;
        height: 50%;
        display: flex;
        justify-content: center;
        align-items: center;

        .sj-icon {
          transform: scale(0.75);
          transition: all 0.2s ease-in-out;
        }

        &:hover {
          .sj-icon {
            color: var(--sj-primary-color);
            transform: scale(1);
          }
        }

        &-disabled {
          cursor: not-allowed;
          .sj-icon {
            color: var(--sj-disable-color);
          }

          &:hover {
            .sj-icon {
              color: var(--sj-disable-color);
              transform: scale(1);
            }
          }
        }
      }

      &-add {
        border-bottom: 1px solid var(--sj-border-color);
      }
    }

    /* border */
    &-border-block {
      border-width: 1px;
    }

    &-border-none {
      border-width: 0;

      &:focus-within {
        outline-width: 0;
      }
    }

    &-border-line {
      border-width: 0 0 1px 0;

      &:focus-within {
        outline-width: 0;
      }
    }

    /* prefix */
    &-prefix {
      margin-right: 4px;
    }

    /* suffix */
    &-suffix {
      margin-left: 4px;
    }

    /* status */
    &-status-success {
      border-color: var(--sj-success-color);

      &:hover {
        border-color: var(--sj-success-color);
      }

      &:focus-within {
        border-color: var(--sj-success-color);
        outline-color: var(--sj-success-focus-background-color);

        input {
          caret-color: var(--sj-success-color);
        }
      }
    }

    &-status-error {
      border-color: var(--sj-error-color);

      &:hover {
        border-color: var(--sj-error-color);
      }

      &:focus-within {
        border-color: var(--sj-error-color);
        outline-color: var(--sj-error-focus-background-color);

        input {
          caret-color: var(--sj-error-color);
        }
      }
    }

    &-status-warning {
      border-color: var(--sj-warning-color);

      &:hover {
        border-color: var(--sj-warning-color);
      }

      &:focus-within {
        border-color: var(--sj-warning-color);
        outline-color: var(--sj-warning-focus-background-color);

        input {
          caret-color: var(--sj-warning-color);
        }
      }
    }
  }

  /* disabled */
  &-disabled {
    position: relative;

    * {
      color: var(--sj-disable-color);
    }

    &::after {
      cursor: not-allowed;
      content: '';
      display: block;
      position: absolute;
      background-color: var(--sj-background-color);
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }
}

.sj-input-number-group {
  display: flex;
}

.sj-input-number-group>* {
  border-radius: 0 !important;
  z-index: 0;
}

.sj-input-number-group>*:not(:first-child) {
  margin-left: -1px;
}

.sj-input-number-group>*:hover,
.sj-input-number-group>*:active,
.sj-input-number-group>*:focus,
.sj-input-number-group>*:focus-within {
  z-index: 1;
}

.sj-input-number-group>*:first-child {
  border-top-left-radius: var(--sj-border-radius) !important;
  border-bottom-left-radius: var(--sj-border-radius) !important;
}

.sj-input-number-group>*:last-child {
  border-top-right-radius: var(--sj-border-radius) !important;
  border-bottom-right-radius: var(--sj-border-radius) !important;
}
